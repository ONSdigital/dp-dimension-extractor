// Code generated by moq; DO NOT EDIT
// github.com/matryer/moq

package testcodelist

import (
	"net/http"
	"sync"
)

var (
	lockImportClientMockGet sync.RWMutex
)

// ImportClientMock is a mock implementation of ImportClient.
//
//     func TestSomethingThatUsesImportClient(t *testing.T) {
//
//         // make and configure a mocked ImportClient
//         mockedImportClient := &ImportClientMock{
//             GetFunc: func(path string) (*http.Response, error) {
// 	               panic("TODO: mock out the Get method")
//             },
//         }
//
//         // TODO: use mockedImportClient in code that requires ImportClient
//         //       and then make assertions.
//
//     }
type ImportClientMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(path string) (*http.Response, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Path is the path argument value.
			Path string
		}
	}
}

// Get calls GetFunc.
func (mock *ImportClientMock) Get(path string) (*http.Response, error) {
	if mock.GetFunc == nil {
		panic("moq: ImportClientMock.GetFunc is nil but ImportClient.Get was just called")
	}
	callInfo := struct {
		Path string
	}{
		Path: path,
	}
	lockImportClientMockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	lockImportClientMockGet.Unlock()
	return mock.GetFunc(path)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedImportClient.GetCalls())
func (mock *ImportClientMock) GetCalls() []struct {
	Path string
} {
	var calls []struct {
		Path string
	}
	lockImportClientMockGet.RLock()
	calls = mock.calls.Get
	lockImportClientMockGet.RUnlock()
	return calls
}
